from Base import message,intersect,SS_VALID
from ADRG import HB1,HC1,HC2,HC3,HJ1,HK1,HL1,HL2,HR1,HS1,HS2,HS3,HT1,HT2,HU1,HZ1,HZ2,HZ3

def group(record):
  mdc_zd=["C22.700","B65.903+K77.0*","K76.808","K82.800x009","E85.415+K77.8*","K70.901","Q45.301","K80.500x002","K71.800","Q44.601","D37.603","K85.901","K75.810","K85.800x003","K72.001","K83.301","C24.100","B17.000","K72.902","K91.800x403","B15.002","K82.808","K75.800x001","B18.802","B19.901","K85.801","B18.900x006","K80.300x002","K80.400","S36.100x001","T86.400x006","K83.502","K81.004","B45.800x001","K83.802","K76.801","B19.000","K86.807","C22.001","S36.200x001","K71.700","K82.100x002","B17.800x003","K76.900x002","B17.204","K73.100","B17.200","I72.809","K85.102","B00.803+K77.0*","K86.103","Q85.900x044","K86.814","I87.109","K74.606","K85.300","K80.101","K83.901","B18.200","K85.902","B65.202+K77.0*","K73.900","K75.800x006","K75.401","B16.904","K74.616+I98.2*","K80.302","K83.000x007","K91.800x411","D13.500x003","K83.011","K86.106","Q44.200x003","K86.104","K82.302","K86.107","S36.110","A18.815+K87.0*","B17.200x005","D37.605","D37.700x003","K83.106","C78.808","K70.403","K80.301","D37.600x001","Q45.100","K76.901","B16.202","B18.104","C24.800","K71.702","B18.200x009","K75.901","K83.813","R17.900","C25.900","K91.806","K82.305","B16.204","C24.900","T86.804","K83.013","K70.301+I98.2*","K80.500x001","I74.800x016","K83.501","K83.800x023","Q27.804","Q44.200","K74.613","K83.810","A52.700x007+K77.0*","K74.618+I98.3*","T86.400x010","K83.800x009","Q44.700x003","B17.900x005","K65.007","K83.004","C78.807","D13.600","B25.100+K77.0*","K74.600x042","Q44.600","K70.304+I98.2*","K70.402","K76.500x001","B17.902","K83.104","B16.902","Q44.102","K83.302","A18.817+K87.1*","B17.100x006","R17.901","K80.400x004","Q44.400","K86.805","C78.800x009","K83.000x012","K83.902","S36.100x011","Q44.705","B15.905","C23.x00","K76.600x002","B16.903","K85.816","C24.002","S36.102","C25.802","K80.505","S36.200x092","Q44.505","K82.301","D18.013","K74.300","K83.006","K80.002","R93.205","B16.100","B25.200+K87.1*","K75.100","K82.303","K83.107","K75.001","K82.200","K83.000","B15.000","K85.200","K76.101","K81.001","K72.000x005","K73.800x001","K82.306","C77.203","R17.900x001","C25.000","K81.002","I87.121","K80.100x001","B17.904","K83.016","K86.105","B26.802+K77.0*","I86.808","K81.005","I81.x00x003","K83.807","K74.300x006+I98.3*","B18.003","K70.300","B16.000","B15.903","C22.000","K82.802","K91.800x407","K70.400x002","K76.700","K91.800x401","D37.601","K80.202","C25.701","Q44.700x004","B17.103","E80.600x006","C24.004","I81.x00","S36.111","B65.900x010+K77.0*","A18.816+K87.0*","K83.017","K74.607","K83.811","T86.400x016","K80.507","D37.602","K83.014","K71.300x001","K80.801","Q27.800x004","K91.841","K85.807","K71.601","B16.001","B17.202","B18.800x005","K85.800x002","K85.302","K76.814","Q85.900x019","Q45.802","B25.101+K77.0*","K70.100","B17.102","K76.200","S36.202","I77.000x017","B65.904+I98.2*","C25.801","Q44.703","B17.100","C24.001","K83.305","D37.705","B18.203","K80.800x001","I77.100x011","B05.800x003+K77.0*","K82.800x004","K85.803","K83.815","B67.500x001+K77.0*","K76.600x007","Q85.911","T86.400x001","K85.301","B18.001","K72.900x001","C24.101","K82.900x001","K83.100x001","B18.800x002","S36.100x051","K76.102","S36.210","K83.808","I82.000x001","K76.807","K85.800x001","K70.001","K83.816","K92.800x012","C22.300","S36.200","S36.200x021","K91.800x304","B15.003","C24.000","K80.200x001","Z52.600x001","K83.007","R93.200x001","A18.814+K77.0*","K75.803","K80.401","I86.809","N82.302","K83.803","Q45.200","K83.401","K71.102","K85.002","K74.600x041","S36.200x011","K76.800x022","K76.001","Q27.805","K76.800x007","K81.100","Q44.100x002","I74.804","K86.100x004","K74.600x029","K71.101","K80.306","I82.001","B18.202","K76.603","K75.000x002","E80.600x008","K83.100","K74.608","K70.401","K76.700x003","Q44.702","K86.803","B18.105","T86.400x005","B16.905","K71.500x001","K91.827","K71.901","K74.620+I98.2*","R16.200x001","K76.600x006","D37.600x002","Q44.700x002","K71.104","K92.800x010","B18.901","K82.801","K91.825","K74.301+I98.2*","E80.601","K80.001","K74.400","B16.100x004","B15.900","B17.800x001","B17.900x006","K83.819","K91.500","C22.100","K71.100x006","Q44.701","D01.501","C25.400","S36.200x031","B16.100x003","K74.615+I98.3*","B58.100+K77.0*","K70.303+I98.2*","K74.600","K83.809","C77.204","K71.001","B54.x00","K85.900x003","K83.300","D13.401","S36.103","K71.100x003","Q85.912","K86.808","K74.302+I98.3*","K85.000","B15.902","K80.000x004","K83.009","K80.201","T86.800x021","Q45.003","E80.600x005","B26.300+K87.1*","K83.303","K74.604","K80.403","K91.823","K82.000x003","K82.304","K83.304","K75.200","T86.400x007","B17.803","K75.806","K80.305","K85.808","B44.803","Q44.501","S36.100x041","B17.101","K85.818","K81.801","A18.301","E80.400","D13.501","K72.100","K85.202","K76.500","K74.500","A01.001+K77.0*","K76.813","K75.000","K83.015","B18.903","K75.400","K74.610","K82.805","S36.200x091","B16.000x001","K74.603","Q44.502","K71.100x005","S36.100x031","C25.200","B17.900x004","N82.201","K86.809","B16.101","K71.701","K74.600x021","K72.000x013","E80.500","K83.103","D01.503","K75.000x003","K85.201","K74.600x030","Q44.504","Q45.002","K80.203","E84.901","S36.100x021","S36.113","C25.803","T86.400x012","T86.400x015","D01.500x001","K71.100","C78.806","D13.500","K71.100x007","K74.601","K76.806","K83.804","B18.204","T86.400x004","E83.102","K76.800x009","K76.700x001","B18.100x007","Q44.100x003","B19.900","S36.100x081","B66.100x001+K77.0*","K72.004","K72.904","Q27.304","K86.806","K73.901","K91.807","K83.100x008","K80.304","K74.600x002","K80.303","B15.901","K86.102","K86.901","K80.504","K82.807","K76.800x015","K86.800x001","K83.800x022","K83.818","K76.300","K85.821","K71.500x002","K71.902+I98.2*","K85.822","B15.001","B17.100x003","K72.003","K72.002","K83.101","K86.800x013","K80.404","B17.800x002","K81.000","C22.101","K75.300x001","Q44.101","K92.800x009","K91.800x402","T86.400x017","K83.012","K81.008","K76.800x026","K70.302+I98.3*","K81.000x008","K83.814","K70.201","K74.600x027","K74.000","D13.500x001","K91.800x301","Q44.301","K82.101","K85.001","K74.600x034","K92.800x006","K72.005","K71.002","M32.108+K77.8*","C24.003","B67.800x001+K77.0*","D01.700","R93.204","B17.203","K74.619+I98.2*","B17.801","K75.805","K76.810","K82.300","K76.800x003","K83.010","B18.100","Q44.503","K76.000","C22.900","K83.306","K83.105","B18.004","K70.900","K71.100x008","K86.818","B19.001","D13.701","B66.301","B19.002","C25.300","K81.007","K86.817","Q44.704","K82.806","K71.200x001","K81.003","K85.809","K70.305+I98.3*","S36.100x013","K71.000x002","K83.018","K80.402","B00.802+K77.0*","Q44.003","K74.600x010","K83.800x012","K85.802","K86.810","S36.201","B17.900x002","D37.604","C24.000x007","K82.001","T86.400x013","K75.002","T86.400x003","K86.200","Q45.300x901","K86.815","B17.900","K92.801","B18.801","K82.200x002","K86.804","K83.102","K74.605","K86.100x002","R94.500","T86.400x014","K76.803","K74.602","K74.600x003","Q44.004","B18.000","C22.400","E80.501","M35.003+K77.8*","K74.612","T85.800x802","K76.500x002","K76.804","K74.300x008+I98.3*","C78.700","K74.617+I98.3*","K80.501","K86.300","K76.815","Q45.001","R93.201","K73.200x002","K85.817","T86.400x018","K82.900x002","B18.902","D37.706","Q44.001","Q44.500x005","B18.803","K80.000x002","K76.800x023","D18.000x031","K76.811","C25.401","I87.108","K83.019","K71.600","K83.109","K82.400","K86.101","Q44.300","C22.200","K74.100","K85.813","K83.805","Q45.300x902","K74.300x007+I98.2*","K83.820","S36.112","K73.000x001","K75.300","D01.502","K85.100","K70.306+I98.3*","T81.800x006","K85.814","A51.400x008+K77.0*","K86.100x001","B17.903","B18.107","E80.600x007","K76.400","K85.815","K75.003","K86.811","B18.800x001","K74.600x031","T86.400x011","K82.803","B18.201","D13.700x001","K81.006","T86.401","K71.900x003","T86.400x009","R16.000x001","K91.822","R93.203","K71.103","K91.840","D17.700x015","B16.203","K81.900x001","K72.900x003+G94.3*","K71.400x001","T82.813","K76.817","B17.200x004","K74.600x036","B18.800x004","K76.401","B67.000x001+K77.0*","B18.002","K80.406","C22.301","D01.701","K86.801","R93.302","B18.800x003","E80.602","E80.603","K80.502","I72.800x072","Q45.300x904","K76.809","K74.300x005+I98.2*","B16.201","K83.005","K82.000","K86.802","Q44.002","A50.000x002+K77.0*","K86.813","K86.800x015","B65.906+I98.3*","I74.803","K80.200x003","D37.600x003","K83.817","K86.000","K83.200x001","K74.611","A06.400+K77.0*","K80.300x005","K75.801","K86.812","K76.602","B16.100x002","K74.200","K81.101","K85.900","Q44.500x007","K71.903+I98.3*","R93.200x002","K76.601","K76.818","B17.205","K74.614","C25.800x001","C45.704","K83.008","A52.705+K77.0*","C24.800x001","K80.506","K73.801","Q44.201","K82.800x002","B16.200","K76.819","I87.803","B18.106","K83.001","C25.100","K76.816","B54.x00x003+K77.0*","K75.804","K71.600x002","K71.900","B18.804","B18.900","B16.901","K76.800x027","B65.900x004+K77.0*","D37.600x004","Q44.500x006","K80.503","K76.800x021","K91.826","K85.101","B18.805","K86.816","S36.101","K72.000x004","K76.800x006","K70.000","K83.108","K76.805","K81.900","K85.900x002","K80.405","K74.600x025","K83.400x001","K83.307","K82.804","D13.400","K86.800x002"]
  dept_list=[]
  if not (True and record.zdList[0] in mdc_zd):
    return ''
  
  message('符合MDCH入组条件，匹配规则：主诊断匹配')

  result=HB1.group(record)
  if result:
    return result
  result=HC1.group(record)
  if result:
    return result
  result=HC2.group(record)
  if result:
    return result
  result=HC3.group(record)
  if result:
    return result
  result=HJ1.group(record)
  if result:
    return result
  result=HK1.group(record)
  if result:
    return result
  result=HL1.group(record)
  if result:
    return result
  result=HL2.group(record)
  if result:
    return result

  if False and record.ssList and intersect(SS_VALID,record.ssList):
    message('符合HQY入组条件，存在有效手术操作：'+','.join(set(record.ssList).intersection(SS_VALID)))
    return 'HQY'

  result=HR1.group(record)
  if result:
    return result

  result=HS1.group(record)
  if result:
    return result

  result=HS2.group(record)
  if result:
    return result

  result=HS3.group(record)
  if result:
    return result

  result=HT1.group(record)
  if result:
    return result

  result=HT2.group(record)
  if result:
    return result

  result=HU1.group(record)
  if result:
    return result

  result=HZ1.group(record)
  if result:
    return result

  result=HZ2.group(record)
  if result:
    return result

  result=HZ3.group(record)
  if result:
    return result

  message('不符合MDCH的ADRG入组条件')

